Index: todo_project/todo_project/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for todo_project project.\r\n\r\nGenerated by 'django-admin startproject' using Django 5.1.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/5.1/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/5.1/ref/settings/\r\n\"\"\"\r\n\r\nfrom pathlib import Path\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = 'django-insecure-q719^fcc2bh2vmyu&k&l6f97bem3)=fvb*_+&p_2rour3oq)wr'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = []\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'todo_app',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'todo_project.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'todo_project.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    }\r\n}\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/5.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'UTC'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\r\n\r\nSTATIC_URL = 'static/'\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n
===================================================================
diff --git a/todo_project/todo_project/settings.py b/todo_project/todo_project/settings.py
--- a/todo_project/todo_project/settings.py	
+++ b/todo_project/todo_project/settings.py	
@@ -11,6 +11,7 @@
 """
 
 from pathlib import Path
+import os
 
 # Build paths inside the project like this: BASE_DIR / 'subdir'.
 BASE_DIR = Path(__file__).resolve().parent.parent
@@ -55,7 +56,7 @@
 TEMPLATES = [
     {
         'BACKEND': 'django.template.backends.django.DjangoTemplates',
-        'DIRS': [],
+        'DIRS': [os.path.join(BASE_DIR, 'templates')],
         'APP_DIRS': True,
         'OPTIONS': {
             'context_processors': [
Index: todo_project/todo_app/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.urls import path\r\nfrom .views import task_list, task_add\r\n\r\nurlpatterns = [\r\n    path('', task_list, name='task_list'),\r\n    path('add/', task_add, name='task_add'),\r\n]\r\n
===================================================================
diff --git a/todo_project/todo_app/urls.py b/todo_project/todo_app/urls.py
--- a/todo_project/todo_app/urls.py	
+++ b/todo_project/todo_app/urls.py	
@@ -1,7 +1,10 @@
 from django.urls import path
+from . import views
 from .views import task_list, task_add
 
+
 urlpatterns = [
     path('', task_list, name='task_list'),
     path('add/', task_add, name='task_add'),
+    path('', views.homepage, name='homepage')
 ]
Index: todo_project/todo_app/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\r\n\r\n# Create your models here.\r\nfrom django.db import models\r\n\r\nclass Task(models.Model):\r\n    title = models.CharField(max_length=200)\r\n    description = models.TextField(blank=True)\r\n    completed = models.BooleanField(default=False)\r\n    created_at = models.DateTimeField(auto_now_add=True)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n
===================================================================
diff --git a/todo_project/todo_app/models.py b/todo_project/todo_app/models.py
--- a/todo_project/todo_app/models.py	
+++ b/todo_project/todo_app/models.py	
@@ -2,7 +2,6 @@
 
 # Create your models here.
 from django.db import models
-
 class Task(models.Model):
     title = models.CharField(max_length=200)
     description = models.TextField(blank=True)
Index: todo_project/todo_app/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\r\n\r\n# Create your views here.\r\nfrom django.shortcuts import render, redirect\r\nfrom .models import Task\r\n\r\ndef task_list(request):\r\n    tasks = Task.objects.all()\r\n    return render(request, 'task_list.html', {'tasks': tasks})\r\n\r\ndef task_add(request):\r\n    if request.method == 'POST':\r\n        title = request.POST.get('title')\r\n        description = request.POST.get('description')\r\n        Task.objects.create(title=title, description=description)\r\n        return redirect('task_list')\r\n    return render(request, 'task_add.html')\r\n
===================================================================
diff --git a/todo_project/todo_app/views.py b/todo_project/todo_app/views.py
--- a/todo_project/todo_app/views.py	
+++ b/todo_project/todo_app/views.py	
@@ -15,3 +15,6 @@
         Task.objects.create(title=title, description=description)
         return redirect('task_list')
     return render(request, 'task_add.html')
+
+def homepage(request):
+    return render(request, 'homepage.html')
\ No newline at end of file
